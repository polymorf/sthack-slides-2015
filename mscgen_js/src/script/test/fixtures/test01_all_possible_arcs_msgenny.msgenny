# test01: all possible arcs
/* 
 * All arcs possible in msgenny
 */
hscale="0.6",
arcgradient="18",
wordwraparcs="false",
watermark="This humongous fictive chart contains all arcs possible in msgenny. It can be used for spot checks, but also for performance checks. 序列圖!";

0, a, b, c, d, e, f, g, h, i, j, k;

a -- b : left to right,
b -- c : right to left,
c -- d : left to right\nbi-directional\n\n,
d -- e : right to left\nbi-directional\n\n,
e -- f : left to right\nnon-directional\n\n,
f -- g : left to right\nnon-directional\n\n,
g -- h : left to right\nself reference\n\n,
h -- i : right to left\nself reference\n\n,
i -- j : bi-directional\nself reference\n\n,
j -- k : non-directional\nself reference\n\n;
0 -- a : signal,
a -> b : a -> b,
b <- c : b <- c,
c <-> d : c <-> d,
e <-> d : e <-> d,
e -- f : e -- f,
g -- f : g -- f,
g -> g : g -> g,
h <- h : h <- h,
i <-> i : i <-> i,
j -- j : j -- j;
0 -- a : method,
a => b : a => b,
b <= c : b <= c,
c <=> d : c <=> d,
e <=> d : e <=> d,
e == f : e == f,
g == f : g == f,
g => g : g => g,
h <= h : h <= h,
i <=> i : i <=> i,
j == j : j == j;
0 -- a : return,
a >> b : a >> b,
b << c : b << c,
c <<>> d : c <<>> d,
e <<>> d : e <<>> d,
e .. f : e .. f,
g .. f : g .. g,
g >> g : g >> g,
h << h : h << h,
i <<>> i : i <<>> i,
j .. j : j .. j;
0 -- a : callback,
a =>> b : a =>> b,
b <<= c : b <<= c,
c <<=>> d : c <<=>> d,
e <<=>> d : e <<=>> d,
g =>> g : g =>> g,
h <<= h : g <<= g,
i <<=>> i : i <<=>>i;
0 -- a : lost,
a -x b : a -x b,
b x- c : b x- c,
g -x g : g -x g,
h x- h : h x- h;
0 -- a : emphasised,
a :> b : a :> b,
b <: c : b <: c,
c <:> d : c <:> d,
e <:> d : e <:> d,
e :: f : e :: f,
g :: f : g :: f,
g :> g : g :> g,
h <: h : h <: h,
i <:> i : i <:> i,
j :: j : j :: j;
0 -- a : note,
b note c : b note c,
e note d : e note d,
g note g : g note g;
0 -- a : box,
b box c : b box c,
e box d : e box d,
g box g : g box g;
0 -- a : rbox,
b rbox c : b rbox c,
e rbox d : e rbox d,
g rbox g : g rbox g;
0 -- a : abox,
b abox c : b abox c,
e abox d : e abox d,
g abox g : g abox g;
0 -- a : empty row,
||| : |||;
... : ...\n(omitted row);
0 -- a : comment,
--- : ---;
0 -- a : broadcasts;
a -> "*" : a -> *;
"*" <- c : * <- c;
b <-> "*" : b <-> *;
d => "*" : d => *;
"*" <= e : * <= e;
d <=> "*" : d <=> *;
f >> "*" : f >> *;
"*" << g : * << g;
f <<>> "*" : f <<>> *;
h =>> "*" : h =>> *;
"*" <<= i : * <<= i;
h <<=>> "*" : h <<=>> *;
j -x "*" : j -x *;
"*" x- k : * x- k;
a :> "*" : a :> *;
"*" <: c : * <: c;
b <:> "*" : b <:> *;
---;
0 -- a : inline\nexpressions;
b alt k : b alt k {
  c else j : c else j {
    d opt i : d opt i {
      e break h : e break k {
        f critical g : f critical g {
          ---;
        };
      };
    };
  };
};
b neg k : b neg k {
  b strict j : b strict j {
    b seq i : b seq i {
      b assert h : b assert h {
        b exc g : b exc g {
          ---;
        };
      };
    };
  };
};
b ref k : b ref k {
  c consider k : c consider k {
    k ignore d : k ignore d {
      e loop k : e loop k {
        k par f : k par f {
          ---;
        };
      };
    };
  };
};
||| : "options used: hscale=\"0.6\", arcgradient=\"18\"";
